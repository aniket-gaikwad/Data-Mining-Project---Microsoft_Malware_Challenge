#!/usr/bin/python
from sklearn.decomposition import PCA
import math
import numpy as np

#train=[[1,2,2,1],[2,1,1,1],[1,1,1,1],[1,1,2,1],[1,1,1,2]]
#label=[1,1,2,1,2]
#test=[[1,1,2,1],[1,1,1,1]]

train=[]
label=[]
test=[]
actualLabel=[]
predicted={}
trainFile='/N/dc2/scratch/hydargah/dm/bigramAllTrain.features'
#testFile='test.csv'
#testFileList=[]
l=0
def main():
	global l
	with open(trainFile) as f:
		firstLine=f.readline()
		for line in f:
			token=line.split(',')
			#if l!=0 or l!=len(token):
			#	print(" *** ERROR **** ")
			l=len(token)
			train.append(token[1:len(token)-1])
			label.append(token[-1].replace('\n',''))

#	with open(testFile) as f:
#		firstLine=f.readline()
#		for line in f:
#			token=line.split(',')
#			testFileList.append(token[0])	
#			test.append(token[1:])
			#actualLabel.append(token[-1].replace('\n',''))
	#print("Train : ")
	#print(train)
	#print("Test : ")
	#print(test)
	print("******* PCA o train data ************")
	X=np.array(train)
	pca=PCA(n_components=10)
	newTrain=pca.fit_transform(X)
	print("New Train")
	print(newTrain)
	print("PCA Explained for top features : ")
	print(pca.explained_variance_ratio_)

#	print("******* PCA on test data ************")
#	X=np.array(test)
#	pca=PCA(n_components=1)
#	newTest=pca.fit_transform(X)
#	print(newTest)
#	print(pca.explained_variance_ratio_)
	#explained_variance=[]
	#explained_variance.extend(pca.explained_variance_ratio_)
	#for var in pca.explained_variance_ratio_:
		#if var > 0.8:
			#print(x_new[explained_variance.index(var)])
	#print(x_new)

if __name__=="__main__":
	main()

