#!/usr/bin/python
from collections import OrderedDict
import csv

## Local variables
#writeFileName='NEW_TEST.csv'
#trainFileName='NEW_TRAIN.csv'
#testFile='test.csv'

## Big Red II variable
trainFileName='/N/dc2/scratch/anikgaik/dm/NEW_TRAIN_AFTER_FEATURESELCTION.csv'
testFile='/N/dc2/scratch/anikgaik/dm/asm_features/testFile.combine'
writeFileName='NEW_TEST_AFTER_FEATURESELCTION.csv'

featureDict=OrderedDict()
testHeader=[]


def populateDictionary():
	#################################################################################
	### Open the file and populate dictionary.
	### The value for a key will be the index of the features selected in train file
	#################################################################################
	global featureDict,testHeader
	f=open(trainFileName,'r')
	header=f.readline().split(',')
	testHeader=header[:-1]
	for key in header[:-1]:
		key=key.replace('\n','')
		featureDict[key]=0
	f.close()
	
	f=open(testFile,'r')
	header=f.readline().split(',')
	for key in header:
		key=key.replace('\n','')
		if key in featureDict:
			featureDict[key]=header.index(key)
	print("featureDict :")
	print(featureDict)
	f.close()

def writeNewFeatureFile():
	global featureDict,testHeader
	f=open(testFile,'r')
	f_write=open(writeFileName,'w')
	indexList=[]

	
	### Ignore header from TEST File
	header=f.readline().split(',')
	
	print("Writting Header start")
	new_header=""
	testHeader=[w.replace('\n','') for w in testHeader]
	for key in testHeader:
		new_header+=str(key)+','
		indexList.append(header.index(key))
	new_header=new_header[:-1]+"\n"
	f_write.write(new_header)
	print("Writting Header end")
	
	#print("indexList : ")
	#print(indexList)

	print("Data processing and writting to file start")
	entryCount=0
	new_line=""
	for line in f:
		entryCount+=1
		if(entryCount%1000==0):
			print("Number of rows processed are : "+str(entryCount))
		data=line.split(',')
		data=[w.replace('\n','') for w in data]
		for index in indexList:
			new_line+=str(data[index])+','
		new_line=new_line[:-1]+"\n"
	new_line=new_line[:-1]	
	f_write.write(new_line)
	f_write.close()
	print("Data processing and writting to file ends")

if __name__=="__main__":
	print("*** populateDictionary ****")
	populateDictionary()
	print("*** writeNewFeatureFile ****")
	writeNewFeatureFile()
